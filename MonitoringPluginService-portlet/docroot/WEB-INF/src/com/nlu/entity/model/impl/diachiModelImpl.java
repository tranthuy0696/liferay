/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.nlu.entity.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.nlu.entity.model.diachi;
import com.nlu.entity.model.diachiModel;
import com.nlu.entity.model.diachiSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the diachi service. Represents a row in the &quot;diachi&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.nlu.entity.model.diachiModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link diachiImpl}.
 * </p>
 *
 * @author NgocBao
 * @see diachiImpl
 * @see com.nlu.entity.model.diachi
 * @see com.nlu.entity.model.diachiModel
 * @generated
 */
@JSON(strict = true)
public class diachiModelImpl extends BaseModelImpl<diachi>
	implements diachiModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a diachi model instance should use the {@link com.nlu.entity.model.diachi} interface instead.
	 */
	public static final String TABLE_NAME = "diachi";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "tinh", Types.VARCHAR },
			{ "huyen", Types.VARCHAR },
			{ "xa", Types.VARCHAR },
			{ "duong", Types.VARCHAR },
			{ "duongKhac", Types.VARCHAR },
			{ "khuPho", Types.VARCHAR },
			{ "soNha", Types.VARCHAR },
			{ "quocGia", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table diachi (id_ LONG not null primary key,tinh VARCHAR(75) null,huyen VARCHAR(75) null,xa VARCHAR(75) null,duong VARCHAR(75) null,duongKhac VARCHAR(75) null,khuPho VARCHAR(75) null,soNha VARCHAR(75) null,quocGia VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table diachi";
	public static final String ORDER_BY_JPQL = " ORDER BY diachi.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY diachi.id_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.nlu.entity.model.diachi"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.nlu.entity.model.diachi"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.nlu.entity.model.diachi"),
			true);
	public static long ID_COLUMN_BITMASK = 1L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static diachi toModel(diachiSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		diachi model = new diachiImpl();

		model.setId(soapModel.getId());
		model.setTinh(soapModel.getTinh());
		model.setHuyen(soapModel.getHuyen());
		model.setXa(soapModel.getXa());
		model.setDuong(soapModel.getDuong());
		model.setDuongKhac(soapModel.getDuongKhac());
		model.setKhuPho(soapModel.getKhuPho());
		model.setSoNha(soapModel.getSoNha());
		model.setQuocGia(soapModel.getQuocGia());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<diachi> toModels(diachiSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<diachi> models = new ArrayList<diachi>(soapModels.length);

		for (diachiSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.nlu.entity.model.diachi"));

	public diachiModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return diachi.class;
	}

	@Override
	public String getModelClassName() {
		return diachi.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("tinh", getTinh());
		attributes.put("huyen", getHuyen());
		attributes.put("xa", getXa());
		attributes.put("duong", getDuong());
		attributes.put("duongKhac", getDuongKhac());
		attributes.put("khuPho", getKhuPho());
		attributes.put("soNha", getSoNha());
		attributes.put("quocGia", getQuocGia());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String tinh = (String)attributes.get("tinh");

		if (tinh != null) {
			setTinh(tinh);
		}

		String huyen = (String)attributes.get("huyen");

		if (huyen != null) {
			setHuyen(huyen);
		}

		String xa = (String)attributes.get("xa");

		if (xa != null) {
			setXa(xa);
		}

		String duong = (String)attributes.get("duong");

		if (duong != null) {
			setDuong(duong);
		}

		String duongKhac = (String)attributes.get("duongKhac");

		if (duongKhac != null) {
			setDuongKhac(duongKhac);
		}

		String khuPho = (String)attributes.get("khuPho");

		if (khuPho != null) {
			setKhuPho(khuPho);
		}

		String soNha = (String)attributes.get("soNha");

		if (soNha != null) {
			setSoNha(soNha);
		}

		String quocGia = (String)attributes.get("quocGia");

		if (quocGia != null) {
			setQuocGia(quocGia);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_columnBitmask |= ID_COLUMN_BITMASK;

		if (!_setOriginalId) {
			_setOriginalId = true;

			_originalId = _id;
		}

		_id = id;
	}

	public long getOriginalId() {
		return _originalId;
	}

	@JSON
	@Override
	public String getTinh() {
		if (_tinh == null) {
			return StringPool.BLANK;
		}
		else {
			return _tinh;
		}
	}

	@Override
	public void setTinh(String tinh) {
		_tinh = tinh;
	}

	@JSON
	@Override
	public String getHuyen() {
		if (_huyen == null) {
			return StringPool.BLANK;
		}
		else {
			return _huyen;
		}
	}

	@Override
	public void setHuyen(String huyen) {
		_huyen = huyen;
	}

	@JSON
	@Override
	public String getXa() {
		if (_xa == null) {
			return StringPool.BLANK;
		}
		else {
			return _xa;
		}
	}

	@Override
	public void setXa(String xa) {
		_xa = xa;
	}

	@JSON
	@Override
	public String getDuong() {
		if (_duong == null) {
			return StringPool.BLANK;
		}
		else {
			return _duong;
		}
	}

	@Override
	public void setDuong(String duong) {
		_duong = duong;
	}

	@JSON
	@Override
	public String getDuongKhac() {
		if (_duongKhac == null) {
			return StringPool.BLANK;
		}
		else {
			return _duongKhac;
		}
	}

	@Override
	public void setDuongKhac(String duongKhac) {
		_duongKhac = duongKhac;
	}

	@JSON
	@Override
	public String getKhuPho() {
		if (_khuPho == null) {
			return StringPool.BLANK;
		}
		else {
			return _khuPho;
		}
	}

	@Override
	public void setKhuPho(String khuPho) {
		_khuPho = khuPho;
	}

	@JSON
	@Override
	public String getSoNha() {
		if (_soNha == null) {
			return StringPool.BLANK;
		}
		else {
			return _soNha;
		}
	}

	@Override
	public void setSoNha(String soNha) {
		_soNha = soNha;
	}

	@JSON
	@Override
	public String getQuocGia() {
		if (_quocGia == null) {
			return StringPool.BLANK;
		}
		else {
			return _quocGia;
		}
	}

	@Override
	public void setQuocGia(String quocGia) {
		_quocGia = quocGia;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			diachi.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public diachi toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (diachi)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		diachiImpl diachiImpl = new diachiImpl();

		diachiImpl.setId(getId());
		diachiImpl.setTinh(getTinh());
		diachiImpl.setHuyen(getHuyen());
		diachiImpl.setXa(getXa());
		diachiImpl.setDuong(getDuong());
		diachiImpl.setDuongKhac(getDuongKhac());
		diachiImpl.setKhuPho(getKhuPho());
		diachiImpl.setSoNha(getSoNha());
		diachiImpl.setQuocGia(getQuocGia());

		diachiImpl.resetOriginalValues();

		return diachiImpl;
	}

	@Override
	public int compareTo(diachi diachi) {
		long primaryKey = diachi.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof diachi)) {
			return false;
		}

		diachi diachi = (diachi)obj;

		long primaryKey = diachi.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		diachiModelImpl diachiModelImpl = this;

		diachiModelImpl._originalId = diachiModelImpl._id;

		diachiModelImpl._setOriginalId = false;

		diachiModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<diachi> toCacheModel() {
		diachiCacheModel diachiCacheModel = new diachiCacheModel();

		diachiCacheModel.id = getId();

		diachiCacheModel.tinh = getTinh();

		String tinh = diachiCacheModel.tinh;

		if ((tinh != null) && (tinh.length() == 0)) {
			diachiCacheModel.tinh = null;
		}

		diachiCacheModel.huyen = getHuyen();

		String huyen = diachiCacheModel.huyen;

		if ((huyen != null) && (huyen.length() == 0)) {
			diachiCacheModel.huyen = null;
		}

		diachiCacheModel.xa = getXa();

		String xa = diachiCacheModel.xa;

		if ((xa != null) && (xa.length() == 0)) {
			diachiCacheModel.xa = null;
		}

		diachiCacheModel.duong = getDuong();

		String duong = diachiCacheModel.duong;

		if ((duong != null) && (duong.length() == 0)) {
			diachiCacheModel.duong = null;
		}

		diachiCacheModel.duongKhac = getDuongKhac();

		String duongKhac = diachiCacheModel.duongKhac;

		if ((duongKhac != null) && (duongKhac.length() == 0)) {
			diachiCacheModel.duongKhac = null;
		}

		diachiCacheModel.khuPho = getKhuPho();

		String khuPho = diachiCacheModel.khuPho;

		if ((khuPho != null) && (khuPho.length() == 0)) {
			diachiCacheModel.khuPho = null;
		}

		diachiCacheModel.soNha = getSoNha();

		String soNha = diachiCacheModel.soNha;

		if ((soNha != null) && (soNha.length() == 0)) {
			diachiCacheModel.soNha = null;
		}

		diachiCacheModel.quocGia = getQuocGia();

		String quocGia = diachiCacheModel.quocGia;

		if ((quocGia != null) && (quocGia.length() == 0)) {
			diachiCacheModel.quocGia = null;
		}

		return diachiCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", tinh=");
		sb.append(getTinh());
		sb.append(", huyen=");
		sb.append(getHuyen());
		sb.append(", xa=");
		sb.append(getXa());
		sb.append(", duong=");
		sb.append(getDuong());
		sb.append(", duongKhac=");
		sb.append(getDuongKhac());
		sb.append(", khuPho=");
		sb.append(getKhuPho());
		sb.append(", soNha=");
		sb.append(getSoNha());
		sb.append(", quocGia=");
		sb.append(getQuocGia());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.nlu.entity.model.diachi");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tinh</column-name><column-value><![CDATA[");
		sb.append(getTinh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>huyen</column-name><column-value><![CDATA[");
		sb.append(getHuyen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>xa</column-name><column-value><![CDATA[");
		sb.append(getXa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>duong</column-name><column-value><![CDATA[");
		sb.append(getDuong());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>duongKhac</column-name><column-value><![CDATA[");
		sb.append(getDuongKhac());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>khuPho</column-name><column-value><![CDATA[");
		sb.append(getKhuPho());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soNha</column-name><column-value><![CDATA[");
		sb.append(getSoNha());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>quocGia</column-name><column-value><![CDATA[");
		sb.append(getQuocGia());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = diachi.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { diachi.class };
	private long _id;
	private long _originalId;
	private boolean _setOriginalId;
	private String _tinh;
	private String _huyen;
	private String _xa;
	private String _duong;
	private String _duongKhac;
	private String _khuPho;
	private String _soNha;
	private String _quocGia;
	private long _columnBitmask;
	private diachi _escapedModel;
}